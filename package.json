{
  "name": "jssom",
  "displayName": "JsSOM",
  "version": "0.2.0",
  "description": "A JavaScript implementation of the SOM (Simple Object Machine",
  "repository": {
    "type": "git",
    "url": "https://github.com/SOM-st/JsSOM.git"
  },
  "author": {
    "name": "Stefan Marr",
    "email": "git@stefan-marr.de"
  },
  "license": "MIT",
  "devDependencies": {
    "chai": "4.3.4",
    "eslint": "7.32.0",
    "eslint-config-airbnb-base": "14.2.1",
    "eslint-plugin-import": "2.25.2",
    "mocha": "10.1.0"
  },
  "scripts": {
    "browserify": "mkdir -p build && npm run core-lib && npm run browserify:main && npm run browserify:som-core && npm run browserify:core-lib-loader",
    "browserify:main": "cp -r src/. build",
    "browserify:som-core": "./libs/jsify-core-lib.py core-lib > build/core-lib-data.js",
    "browserify:core-lib-loader": "cp build/lib/core-lib-browser.js build/lib/core-lib.js",
    "clean": "rm -Rf build/*.js",
    "clobber": "rm -Rf build/",
    "core-lib": "git submodule update --init --recursive",
    "test": "mocha -t 3000 -u bdd ./tests/som/",
    "lint": "eslint src tests",
    "deploy-som-st": "npm run browserify && mkdir -p ../som-st.github.io/jssom && cp -r build/. ../som-st.github.io/jssom"
  },
  "type": "module",
  "eslintConfig": {
    "env": {
      "browser": true,
      "es2021": true,
      "node": true
    },
    "extends": [ "airbnb-base" ],
    "globals": {
      "process": "readonly",
      "global": "readonly",
      "BigInt": "readonly",
      "describe": "readonly",
      "it": "readonly"
    },
    "parserOptions": {
      "ecmaVersion": 12,
      "sourceType": "module"
    },
    "rules": {
      "max-classes-per-file": "off",
      "import/prefer-default-export": "off",
      "import/extensions": "off",
      "import/no-cycle": "off",
      "import/named": "off",
      "no-restricted-syntax": "off",
      "no-underscore-dangle": "off",
      "no-bitwise": "off",
      "no-param-reassign": "off",
      "class-methods-use-this": "off",
      "prefer-destructuring": "off",
      "no-continue": "off",
      "no-unused-vars": ["error", { "varsIgnorePattern": "^_", "argsIgnorePattern": "^_" }]
    }
  }
}
