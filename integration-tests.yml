known_failures: []


failing_as_unspecified:
  - core-lib/IntegrationTests/Tests/arbint_double_div_err.som
  - core-lib/IntegrationTests/Tests/arbint_double_div_zero_err.som
  - core-lib/IntegrationTests/Tests/arbint_modulus_err.som
  - core-lib/IntegrationTests/Tests/array_at_idx0_err.som
  - core-lib/IntegrationTests/Tests/array_at_idx2_err.som
  - core-lib/IntegrationTests/Tests/array_at_idx_err.som
  - core-lib/IntegrationTests/Tests/array_at_negative_idx_err.som
  - core-lib/IntegrationTests/Tests/array_at_put_idx0_err.som
  - core-lib/IntegrationTests/Tests/array_at_put_idx2_err.som
  - core-lib/IntegrationTests/Tests/call2.som

  # I think this one is about E vs e, but maybe also double rendering and e+59 or e59
  - core-lib/IntegrationTests/Tests/double2.som
  - core-lib/IntegrationTests/Tests/double_double_div.som
  - core-lib/IntegrationTests/Tests/int_double_div.som

  # printing is not specified
  # 18446744073709552000
  # or 1.8446744073709552e19 are both valid options
  - core-lib/IntegrationTests/Tests/integer_asdouble.som


  # I think IEEE allows for infinities here, and we probably want that
  - core-lib/IntegrationTests/Tests/double3.som
  - core-lib/IntegrationTests/Tests/double4.som
  - core-lib/IntegrationTests/Tests/double5.som
  - core-lib/IntegrationTests/Tests/double6.som
  - core-lib/IntegrationTests/Tests/double7.som
  - core-lib/IntegrationTests/Tests/double8.som
  - core-lib/IntegrationTests/Tests/double9.som
  - core-lib/IntegrationTests/Tests/double11.som
  - core-lib/IntegrationTests/Tests/double13.som

  # Java seems to do some rounding in the transition, but it's also requiring bigints
  - core-lib/IntegrationTests/Tests/double_asinteger.som


  - core-lib/IntegrationTests/Tests/double_double_div_err.som
  - core-lib/IntegrationTests/Tests/double_double_div_zero_err1.som
  - core-lib/IntegrationTests/Tests/double_double_div_zero_err2.som
  - core-lib/IntegrationTests/Tests/double_double_div_zero_err3.som
  - core-lib/IntegrationTests/Tests/double_double_div_zero_err4.som
  # - core-lib/IntegrationTests/Tests/double_modulus.som
  - core-lib/IntegrationTests/Tests/double_modulus_err.som

  - core-lib/IntegrationTests/Tests/exit_double.som
  - core-lib/IntegrationTests/Tests/exit_int_too_big.som
  - core-lib/IntegrationTests/Tests/exit_string.som

  - core-lib/IntegrationTests/Tests/fromstring_double_err.som
  - core-lib/IntegrationTests/Tests/fromstring_err.som

  - core-lib/IntegrationTests/Tests/hashcode2.som

  - core-lib/IntegrationTests/Tests/inst_var_at_bad_idx.som
  - core-lib/IntegrationTests/Tests/inst_var_at_put_bad_idx.som

  - core-lib/IntegrationTests/Tests/instance_fields_overlap/test.som
  - core-lib/IntegrationTests/Tests/instance_fields_overlap2.som

  - core-lib/IntegrationTests/Tests/int5.som
  - core-lib/IntegrationTests/Tests/int8.som
  - core-lib/IntegrationTests/Tests/int9.som

  - core-lib/IntegrationTests/Tests/int10.som
  - core-lib/IntegrationTests/Tests/int11.som
  - core-lib/IntegrationTests/Tests/int12.som
  - core-lib/IntegrationTests/Tests/int13.som
  - core-lib/IntegrationTests/Tests/int14.som
  - core-lib/IntegrationTests/Tests/int15.som
  - core-lib/IntegrationTests/Tests/int16.som
  - core-lib/IntegrationTests/Tests/int17.som

  # too large shifts would take too much memory to support
  # need to specify this some how
  - core-lib/IntegrationTests/Tests/int20.som
  - core-lib/IntegrationTests/Tests/int21.som
  - core-lib/IntegrationTests/Tests/int22.som
  - core-lib/IntegrationTests/Tests/int23.som
  - core-lib/IntegrationTests/Tests/int25.som
  - core-lib/IntegrationTests/Tests/int27.som
  - core-lib/IntegrationTests/Tests/int28.som
  - core-lib/IntegrationTests/Tests/int31.som

  - core-lib/IntegrationTests/Tests/int_double_div_err.som
  - core-lib/IntegrationTests/Tests/int_double_div_zero_err.som
  - core-lib/IntegrationTests/Tests/int_modulus.som
  - core-lib/IntegrationTests/Tests/int_modulus_err.som

  - core-lib/IntegrationTests/Tests/load_string.som

  - core-lib/IntegrationTests/Tests/mutate_methods.som
  - core-lib/IntegrationTests/Tests/mutate_superclass_method/test.som

  - core-lib/IntegrationTests/Tests/nested_backtrace1.som
  - core-lib/IntegrationTests/Tests/nested_backtrace2.som

  - core-lib/IntegrationTests/Tests/obj2.som

  - core-lib/IntegrationTests/Tests/perform_string.som
  - core-lib/IntegrationTests/Tests/perform_witharguments_wrong.som

  - core-lib/IntegrationTests/Tests/remainder_zero.som
  - core-lib/IntegrationTests/Tests/round.som

  - core-lib/IntegrationTests/Tests/shift_right.som
  - core-lib/IntegrationTests/Tests/shift_right_too_big.som
  - core-lib/IntegrationTests/Tests/shift_right_type_err.som

  - core-lib/IntegrationTests/Tests/str_escape_unknown.som

  - core-lib/IntegrationTests/Tests/system2.som
  - core-lib/IntegrationTests/Tests/system_global_lookup_string.som
  - core-lib/IntegrationTests/Tests/system_global_put_string.som

  - core-lib/IntegrationTests/Tests/test_literals_limit_1.som
  - core-lib/IntegrationTests/Tests/unknown_field_write.som

  # This should be specified so that the "set" of fields cannot be changed reflectively
  # they obtained array can be changed, but it is expected to have no effect.
  - core-lib/IntegrationTests/Tests/mutate_fields.som


unsupported:
  # JS doesn't have a sqrt implementation for BigIntegers
  - core-lib/IntegrationTests/Tests/int26.som
  - core-lib/IntegrationTests/Tests/int29.som


do_not_run:
  - core-lib/IntegrationTests/Tests/case_insensitive.som
